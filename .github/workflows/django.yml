name: PIPELINE Testing

on:
  push:
    branches: [ develop, dev,  main, master, staging ]
  pull_request:
    branches: [ develop, dev,  main, master, staging ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Format code in according to blake
        working-directory: ./webAppClassifier
        run: |
          black webAppClassifier
          black classifier
      - name: Trim files
        working-directory: ./webAppClassifier
        run: |
          pip3 install trim
          trim .
      - name: Check Code Quality
        working-directory: ./webAppClassifier
        run: flake8
      - uses: codecov/codecov-action@v2
      - name: Run Tests and Upload coverage testing
        working-directory: ./webAppClassifier
        env:
          SECRET_KEY: 3que!@rl5qknstzcq6yn+6$bflk=htdwc!(+s1_(dzv5hes&ue
          DEBUG: False
        run: |
          python manage.py test
          pip install codecov && codecov -t ${{ secrets.COV_TOKEN }} 
